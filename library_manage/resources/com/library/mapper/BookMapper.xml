<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.library.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.library.entity.Book" >
    <id column="ISBN" property="isbn" jdbcType="CHAR" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publish" property="publish" jdbcType="VARCHAR" />
    <result column="publishdate" property="publishdate" jdbcType="DATE" />
    <result column="printnum" property="printnum" jdbcType="INTEGER" />
    <result column="unitprice" property="unitprice" jdbcType="DECIMAL" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="borrownum" property="borrownum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ISBN, typeid, bookname, author, publish, publishdate, printnum, unitprice, num, borrownum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.library.entity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from book
    where ISBN = #{isbn,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from book
    where ISBN = #{isbn,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.library.entity.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.library.entity.Book" >
    insert into book (ISBN, typeid, bookname, 
      author, publish, publishdate, 
      printnum, unitprice, num, 
      borrownum)
    values (#{isbn,jdbcType=CHAR}, #{typeid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{publish,jdbcType=VARCHAR}, #{publishdate,jdbcType=DATE}, 
      #{printnum,jdbcType=INTEGER}, #{unitprice,jdbcType=DECIMAL}, #{num,jdbcType=INTEGER}, 
      #{borrownum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.library.entity.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publish != null" >
        publish,
      </if>
      <if test="publishdate != null" >
        publishdate,
      </if>
      <if test="printnum != null" >
        printnum,
      </if>
      <if test="unitprice != null" >
        unitprice,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="borrownum != null" >
        borrownum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="isbn != null" >
        #{isbn,jdbcType=CHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null" >
        #{publishdate,jdbcType=DATE},
      </if>
      <if test="printnum != null" >
        #{printnum,jdbcType=INTEGER},
      </if>
      <if test="unitprice != null" >
        #{unitprice,jdbcType=DECIMAL},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="borrownum != null" >
        #{borrownum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.library.entity.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.isbn != null" >
        ISBN = #{record.isbn,jdbcType=CHAR},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null" >
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null" >
        publish = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.publishdate != null" >
        publishdate = #{record.publishdate,jdbcType=DATE},
      </if>
      <if test="record.printnum != null" >
        printnum = #{record.printnum,jdbcType=INTEGER},
      </if>
      <if test="record.unitprice != null" >
        unitprice = #{record.unitprice,jdbcType=DECIMAL},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.borrownum != null" >
        borrownum = #{record.borrownum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set ISBN = #{record.isbn,jdbcType=CHAR},
      typeid = #{record.typeid,jdbcType=INTEGER},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publish = #{record.publish,jdbcType=VARCHAR},
      publishdate = #{record.publishdate,jdbcType=DATE},
      printnum = #{record.printnum,jdbcType=INTEGER},
      unitprice = #{record.unitprice,jdbcType=DECIMAL},
      num = #{record.num,jdbcType=INTEGER},
      borrownum = #{record.borrownum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.library.entity.Book" >
    update book
    <set >
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null" >
        publishdate = #{publishdate,jdbcType=DATE},
      </if>
      <if test="printnum != null" >
        printnum = #{printnum,jdbcType=INTEGER},
      </if>
      <if test="unitprice != null" >
        unitprice = #{unitprice,jdbcType=DECIMAL},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="borrownum != null" >
        borrownum = #{borrownum,jdbcType=INTEGER},
      </if>
    </set>
    where ISBN = #{isbn,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.library.entity.Book" >
    update book
    set typeid = #{typeid,jdbcType=INTEGER},
      bookname = #{bookname,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=DATE},
      printnum = #{printnum,jdbcType=INTEGER},
      unitprice = #{unitprice,jdbcType=DECIMAL},
      num = #{num,jdbcType=INTEGER},
      borrownum = #{borrownum,jdbcType=INTEGER}
    where ISBN = #{isbn,jdbcType=CHAR}
  </update>
</mapper>